name: Terraform Infrastructure

on:
  push:
    branches: [ main ]
    paths: [ 'terraform/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'terraform/**' ]

env:
  TF_VERSION: '1.5.0'

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive terraform/
    
    - name: Terraform Init
      run: |
        cd terraform/aws
        terraform init -backend=false
    
    - name: Terraform Validate
      run: |
        cd terraform/aws
        terraform validate
    
    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: |
        cd terraform/aws
        terraform plan -var="db_password=dummy" -no-color
      continue-on-error: true

  # Temporarily disabled to avoid AWS infrastructure costs
  # terraform-apply:
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   needs: terraform-check
  #   runs-on: ubuntu-latest
  #   environment: production
  #   
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #   
  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v2
  #     with:
  #       terraform_version: ${{ env.TF_VERSION }}
  #   
  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: us-west-2
  #   
  #   - name: Terraform Init
  #     run: |
  #       cd terraform/aws
  #       terraform init
  #   
  #   - name: Terraform Apply
  #     run: |
  #       cd terraform/aws
  #       terraform apply -var="db_password=${{ secrets.DB_PASSWORD }}" -auto-approve