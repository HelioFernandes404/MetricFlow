apiVersion: apps/v1
kind: Deployment
metadata:
  name: metricflow-app
  namespace: metricflow
  labels:
    app: metricflow-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: metricflow-app
  template:
    metadata:
      labels:
        app: metricflow-app
    spec:
      containers:
      - name: metricflow
        image: metricflow:latest
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_HOST
          value: "redis"
        - name: ENVIRONMENT
          value: "production"
        - name: APP_VERSION
          value: "1.0.0"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: metricflow-service
  namespace: metricflow
  labels:
    app: metricflow-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: metricflow-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: metricflow-ingress
  namespace: metricflow
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - metricflow.example.com
    secretName: metricflow-tls
  rules:
  - host: metricflow.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: metricflow-service
            port:
              number: 80